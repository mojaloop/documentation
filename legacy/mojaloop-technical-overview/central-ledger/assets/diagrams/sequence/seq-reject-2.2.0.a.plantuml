/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Sam Kummary <sam@modusbox.com>
 --------------
******'/

@startuml
' declate title
title 2.2.0.a. DFSP2 sends a PUT call on /error end-point for a Transfer request

autonumber
' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
actor "DFSP1\nPayer" as DFSP1
actor "DFSP2\nPayee" as DFSP2
boundary "ML API Adapter" as MLAPI
control "ML API Notification Event Handler" as NOTIFY_HANDLER
boundary "Central Service API" as CSAPI
collections "Fulfil-Topic" as TOPIC_FULFIL
control "Fulfil Event Handler" as FULF_HANDLER
collections "topic-transfer-position" as TOPIC_TRANSFER_POSITION
control "Position Event Handler" as POS_HANDLER
collections "Notification-Topic" as TOPIC_NOTIFICATIONS

box "Financial Service Providers" #lightGray
	participant DFSP1
	participant DFSP2
end box

box "ML API Adapter Service" #LightBlue
	participant MLAPI
	participant NOTIFY_HANDLER
end box

box "Central Service" #LightYellow
    participant CSAPI
	participant TOPIC_FULFIL
    participant FULF_HANDLER
    participant TOPIC_TRANSFER_POSITION
    participant POS_HANDLER
    participant TOPIC_NOTIFICATIONS
end box

' start flow
activate NOTIFY_HANDLER
activate FULF_HANDLER
activate POS_HANDLER
group DFSP2 sends a Fulfil Success Transfer request
    DFSP2 <-> DFSP2: During processing of an incoming\nPOST /transfers request, some processing\nerror occurred and an Error callback is made
    note right of DFSP2 #yellow
        Headers - transferHeaders: {
            Content-Length: <Content-Length>,
            Content-Type: <Content-Type>,
            Date: <Date>,
            X-Forwarded-For: <X-Forwarded-For>,
            FSPIOP-Source: <FSPIOP-Source>,
            FSPIOP-Destination: <FSPIOP-Destination>,
            FSPIOP-Encryption: <FSPIOP-Encryption>,
            FSPIOP-Signature: <FSPIOP-Signature>,
            FSPIOP-URI: <FSPIOP-URI>,
            FSPIOP-HTTP-Method: <FSPIOP-HTTP-Method>
        }

        Payload - errorMessage:
        {
            errorInformation
            {
                "errorCode": <errorCode>,
                "errorDescription": <errorDescription>
                "extensionList": {
                    "extension": [
                        {
                            "key": <string>,
                            "value": <string>
                        }
                    ]
                }
            }
        }
    end note
    DFSP2 ->> MLAPI: PUT - /transfers/<ID>/error
    activate MLAPI
    MLAPI -> MLAPI: Validate incoming originator matching Payee\n<color #FF0000><b>Error codes:</b> 3000-3002, 3100-3107</color>
    note right of MLAPI #yellow
        Message:
        {
            id: <ID>,
            from: <transferHeaders.FSPIOP-Source>,
            to: <transferHeaders.FSPIOP-Destination>,
            type: application/json,
            content: {
                headers: <transferHeaders>,
                payload: <errorMessage>
            },
            metadata: {
                event: {
                    id: <uuid>,
                    type: fulfil,
                    action: abort,
                    createdAt: <timestamp>,
                    state: {
                        status: "success",
                        code: 0
                    }
                }
            }
        }
    end note
    MLAPI -> TOPIC_FULFIL: Route & Publish Abort/Reject event for Payee\n<color #FF0000><b>Error code:</b> 2003</color>
    activate TOPIC_FULFIL
    TOPIC_FULFIL <-> TOPIC_FULFIL: Ensure event is replicated as configured (ACKS=all)\n<color #FF0000><b>Error code:</b> 2003</color>
    TOPIC_FULFIL --> MLAPI: Respond replication acknowledgements have been received
    deactivate TOPIC_FULFIL
    MLAPI -->> DFSP2: Respond HTTP - 200 (OK)
    deactivate MLAPI
    TOPIC_FULFIL <- FULF_HANDLER: Consume message
    ref over TOPIC_FULFIL, TOPIC_TRANSFER_POSITION: Fulfil Handler Consume (Reject/Abort)\n
    FULF_HANDLER -> TOPIC_TRANSFER_POSITION: Produce message
    |||
    TOPIC_TRANSFER_POSITION <- POS_HANDLER: Consume message
    ref over TOPIC_TRANSFER_POSITION, TOPIC_NOTIFICATIONS:  Position Handler Consume (Abort)\n
    POS_HANDLER -> TOPIC_NOTIFICATIONS: Produce message
    |||
    TOPIC_NOTIFICATIONS <- NOTIFY_HANDLER: Consume message
    opt action == 'abort'
        |||
        ref over DFSP1, TOPIC_NOTIFICATIONS: Send notification to Participant (Payer)\n
        NOTIFY_HANDLER -> DFSP1: Send callback notification
    end
    |||
    TOPIC_NOTIFICATIONS <- NOTIFY_HANDLER: Consume message
    opt action == 'abort'
        |||
        ref over DFSP2, TOPIC_NOTIFICATIONS: Send notification to Participant (Payee)\n
        NOTIFY_HANDLER -> DFSP2: Send callback notification
    end
    |||
end
deactivate POS_HANDLER
deactivate FULF_HANDLER
deactivate NOTIFY_HANDLER
@enduml