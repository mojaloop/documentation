# CircleCI v2.1 Config
version: 2.1

##
# orbs
#
# Orbs used in this pipeline
##
orbs:
  slack: circleci/slack@3.4.2
  pr-tools: mojaloop/pr-tools@0.1.8


##
# defaults
#
# YAML defaults templates, in alphabetical order
##
defaults_Dependencies: &defaults_Dependencies |
  apk --no-cache add git \
            ca-certificates \
            curl \
            openssh-client \
            make gcc g++ python3 libtool autoconf automake \
            python3 \
            py3-pip
  pip3 install --upgrade pip
  pip3 install awscli


defaults_configure_nvm: &defaults_configure_nvm
  name: Configure NVM
  command: |
    touch $HOME/.profile
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    echo "Installing Node version: $(cat .nvmrc)"
    nvm install $(cat .nvmrc)
    nvm alias default $(cat .nvmrc)
    nvm use $(cat .nvmrc)

##
# Executors
#
# CircleCI Executors
##
executors:
  default-docker:
    working_directory: &WORKING_DIR /home/circleci/project
    docker:
      - image: node:16.15.0-alpine # Ref: https://hub.docker.com/_/node?tab=tags&page=1&name=alpine

  legacy-docker:
    working_directory: *WORKING_DIR
    docker:
      - image: node:10.15.2-alpine

  default-machine:
    working_directory: *WORKING_DIR
    machine:
      image: ubuntu-2004:current # Ref: https://circleci.com/developer/machine/image/ubuntu-2004
      
##
# Jobs
#
# A map of CircleCI jobs
##
jobs:
  build:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          <<: *defaults_configure_nvm
      - run:
          name: install node dependencies
          command: npm ci
      - run:
          name: build
          command: npm run build
  
  build-legacy:
    executor: legacy-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          name: install node dependencies
          command: |
            cd ./legacy
            npm ci
      - run:
          name: build
          command: cd ./legacy && npm run gitbook:build
      - save_cache:
          name: Save legacy build cache
          key: build-legacy-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /home/circleci/project/legacy/_book

  test-puml:
    executor: default-machine
    steps:
      - checkout
      - run:
          <<: *defaults_configure_nvm
      - run:
          name: Update NPM install
          command: npm ci
      - run:
          name: Check if plantuml has been updated correctly
          command: |
            set +o pipefail
            npm run build:plantuml:all
            FILE_COUNT=$(git diff --cached --name-only | grep .svg | wc -l)
            if [ ${FILE_COUNT} -ne "0" ]; then
              echo 'Plantuml files are out of sync. Please run npm run build:plantuml:all and try again.';
              exit 1;
            else
              echo 'Plantuml files are up to date';
            fi

  infra:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          name: Install terraform
          command: |
            cd /usr/local/bin
            curl https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -o terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
            unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
            rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          environment:
            TERRAFORM_VERSION: 0.14.3
      - run:
          name: Update infrastructure
          command: |
            cd ./infra/src
            terraform init \
              -backend-config="bucket=docs.mojaloop.io-state" \
              -backend-config="region=eu-west-2" \
              -backend-config="dynamodb_table=docs.mojaloop.io-lock"
            terraform refresh
            terraform apply --auto-approve

  s3_upload:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - restore_cache:
          keys:
            - build-legacy-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: test aws cli + permissions
          command: |
            aws --version
            aws s3 ls s3://mojaloop-docs-preview
      - run:
          name: run build and deploy script
          command: ./scripts/_deploy_preview_s3.sh
          environment:
            BUCKET_NAME: docs.mojaloop.io-root
            DOMAIN: docs.mojaloop.io
    
      # TODO: announce preview docs are ready
      # - run:
      #     <<: *defaults_slack_announcement

  # When a new tag is pushed, create a new version of docs
  # and push it to master to be uploaded
  bump_version:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          <<: *defaults_configure_nvm
      - run:
          name: Configure git
          command: |
            git config user.email ${GIT_CI_EMAIL}
            git config user.name ${GIT_CI_USER}
            git checkout master
      - restore_cache:
          keys:
            - build-legacy-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: create a new version in website/versioned_docs
          command: |
            npm ci
            ./node_modules/.bin/vuepress version docs $CIRCLE_TAG
      - run:
          name: Configure ssh
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan -p 443 ssh.github.com >> ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Commit and push the release
          command: |
            git add .
            git commit -anm "chore(ci): release $CIRCLE_TAG"
            git push -u origin master

##
# Workflows
#
# CircleCI Workflow config
##
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
          
      - build-legacy:
          context: org-global
          filters:
            tags:
              only: /.*/

      - test-puml:
          context: org-global
          filters:
            tags:
              only: /.*/

      - infra:
          context: org-global
          requires:
            - build
            - build-legacy
            - test-puml
          filters:
            branches:
              only:
                - master
          
      - s3_upload:
          context: org-global
          requires:
            - infra
          filters:
            branches:
              only:
                - master
      
      - bump_version:
          context: org-global
          requires:
            - build
            - build-legacy
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(\-snapshot)?(\-hotfix(\.[0-9]+))?/
