swagger: '2.0'
info:
  version: '1.1'
  title: Interface for interaction between Mojaloop's Account Lookup Service(ALS) and an Oracle Registry Service
  description: Based on Mojaloop [API Definition](https://github.com/mojaloop/mojaloop-specification/blob/master/API%20Definition%20v1.0.pdf) updated on 2018-03-13 Version 1.0. More information can be found are [mojaloop.io](http://mojaloop.io/)
  contact: {}
basePath: /
schemes: []
consumes:
- application/json
produces:
- application/json
paths:
  /participants/{Type}/{ID}:
    get:
      description: The HTTP request GET /participants/{Type}/{ID} is used to find out in which FSP the requested Party, defined by {Type} and {ID} is located (for example, GET /participants/MSISDN/123456789). This HTTP request should support a query string to filter FSP information regarding a specific currency only (This similarly applies to the SubId). To query a specific currency only, the HTTP request GET /participants/{Type}/{ID}?currency=XYZ should be used, where XYZ is the requested currency. Note - Both the currency and the SubId can be used mutually inclusive or exclusive
      summary: Look up participant information
      tags:
      - participants
      operationId: ParticipantsByTypeAndIDGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: accept
        in: header
        required: true
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
      - name: Type
        in: path
        required: true
        type: string
        description: The type of lookup being requested, this can be MSISDN, bankAccount etc.
      - name: ID
        in: path
        required: true
        type: string
        description: The ID related to the Type, if MSISDN then this is the mobile number being requested
      - name: Currency
        in: query
        required: false
        type: string
        description: The Currency code applicable to the ID being requested
      - name: SubId
        in: query
        required: false
        type: string
        description: The SubId related to the ID, or the Type
      - name: content-type
        in: header
        required: true
        type: string
        description: The Content-Type header indicates the specific version of the API used to send the payload body.
      - name: date
        in: header
        required: true
        type: string
        description: The Date header field indicates the date when the request was sent.
      - name: fspiop-source
        in: header
        required: true
        type: string
        description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).
      - name: x-forwarded-for
        in: header
        required: false
        type: string
        description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      - name: fspiop-destination
        in: header
        required: false
        type: string
        description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
      - name: fspiop-encryption
        in: header
        required: false
        type: string
        description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: fspiop-signature
        in: header
        required: false
        type: string
        description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: fspiop-uri
        in: header
        required: false
        type: string
        description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
      - name: fspiop-http-method
        in: header
        required: false
        type: string
        description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ParticipantsTypeIDGetResponse'
          headers:
            Content-Length:
              type: string
        400:
          description: Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        401:
          description: Unauthorized - The request requires authentication in order to be processed.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        403:
          description: Forbidden - The request was denied and will be denied in the future.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        404:
          description: Not Found - The resource specified in the URI was not found.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        405:
          description: Method Not Allowed - An unsupported HTTP method for the request was used.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        406:
          description: Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        501:
          description: Not Implemented - The server does not support the requested service. The client should not retry.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        503:
          description: Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
    put:
      description: The PUT /participants/{Type}/{ID} is used to update information in the server regarding the provided identity, defined by {Type} and {ID} (for example, PUT /participants/MSISDN/123456789).
      summary: Return participant information
      tags:
      - participants
      operationId: ParticipantsByTypeAndIDPut
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Type
        in: path
        required: true
        type: string
        description: The type of lookup being requested, this can be MSISDN, bankAccount etc.
      - name: ID
        in: path
        required: true
        type: string
        description: The ID related to the Type, if MSISDN then this is the mobile number being requested
      - name: content-type
        in: header
        required: true
        type: string
        description: The Content-Type header indicates the specific version of the API used to send the payload body.
      - name: date
        in: header
        required: true
        type: string
        description: The Date header field indicates the date when the request was sent.
      - name: fspiop-source
        in: header
        required: true
        type: string
        description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ParticipantsTypeIDPutRequest'
      - name: accept
        in: header
        required: false
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
      - name: x-forwarded-for
        in: header
        required: false
        type: string
        description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      - name: fspiop-destination
        in: header
        required: false
        type: string
        description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
      - name: fspiop-encryption
        in: header
        required: false
        type: string
        description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: fspiop-signature
        in: header
        required: false
        type: string
        description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: fspiop-uri
        in: header
        required: false
        type: string
        description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
      - name: fspiop-http-method
        in: header
        required: false
        type: string
        description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
      - name: content-length
        in: header
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)
      responses:
        204:
          description: No Content
          headers: {}
        400:
          description: Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        401:
          description: Unauthorized - The request requires authentication in order to be processed.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        403:
          description: Forbidden - The request was denied and will be denied in the future.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        404:
          description: Not Found - The resource specified in the URI was not found.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        405:
          description: Method Not Allowed - An unsupported HTTP method for the request was used.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        406:
          description: Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        501:
          description: Not Implemented - The server does not support the requested service. The client should not retry.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        503:
          description: Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
    post:
      description: The HTTP request POST /participants/{Type}/{ID} is used to create information in the server regarding the provided identity, defined by {Type} and {ID} (for example, POST /participants/MSISDN/123456789).
      summary: Create participant information
      tags:
      - participants
      operationId: ParticipantsByTypeAndIDPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: accept
        in: header
        required: true
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
      - name: Type
        in: path
        required: true
        type: string
        description: The type of lookup being requested, this can be MSISDN, bankAccount etc.
      - name: ID
        in: path
        required: true
        type: string
        description: The ID related to the Type, if MSISDN then this is the mobile number being requested
      - name: content-type
        in: header
        required: true
        type: string
        description: The Content-Type header indicates the specific version of the API used to send the payload body.
      - name: date
        in: header
        required: true
        type: string
        description: The Date header field indicates the date when the request was sent.
      - name: fspiop-source
        in: header
        required: true
        type: string
        description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ParticipantsTypeIDPutRequest'
      - name: x-forwarded-for
        in: header
        required: false
        type: string
        description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      - name: fspiop-destination
        in: header
        required: false
        type: string
        description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
      - name: fspiop-encryption
        in: header
        required: false
        type: string
        description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: fspiop-signature
        in: header
        required: false
        type: string
        description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: fspiop-uri
        in: header
        required: false
        type: string
        description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
      - name: fspiop-http-method
        in: header
        required: false
        type: string
        description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
      - name: content-length
        in: header
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)
      responses:
        201:
          description: Created
          headers: {}
        400:
          description: Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        401:
          description: Unauthorized - The request requires authentication in order to be processed.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        403:
          description: Forbidden - The request was denied and will be denied in the future.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        404:
          description: Not Found - The resource specified in the URI was not found.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        405:
          description: Method Not Allowed - An unsupported HTTP method for the request was used.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        406:
          description: Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        501:
          description: Not Implemented - The server does not support the requested service. The client should not retry.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        503:
          description: Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
    delete:
      description: The HTTP request DELETE /participants/{Type}/{ID} is used to delete information in the server regarding the provided identity, defined by {Type} and {ID}) (for example, DELETE /participants/MSISDN/123456789). This HTTP request should support a query string to delete FSP information regarding a specific currency only (This similarly applies to the SubId). To delete a specific currency only, the HTTP request DELETE /participants/{Type}/{ID}?currency=XYZ should be used, where XYZ is the requested currency. Note - Both the currency and the SubId can be used mutually inclusive or exclusive
      summary: Delete participant information
      tags:
      - participants
      operationId: ParticipantsByTypeAndIDDelete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: accept
        in: header
        required: true
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
      - name: Type
        in: path
        required: true
        type: string
        description: The type of lookup being requested, this can be MSISDN, bankAccount etc.
      - name: ID
        in: path
        required: true
        type: string
        description: The ID related to the Type, if MSISDN then this is the mobile number being requested
      - name: Currency
        in: query
        required: false
        type: string
        description: The Currency code applicable to the ID being requested
      - name: SubId
        in: query
        required: false
        type: string
        description: The SubId related to the ID, or the Type
      - name: content-type
        in: header
        required: true
        type: string
        description: The Content-Type header indicates the specific version of the API used to send the payload body.
      - name: date
        in: header
        required: true
        type: string
        description: The Date header field indicates the date when the request was sent.
      - name: fspiop-source
        in: header
        required: true
        type: string
        description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).
      - name: x-forwarded-for
        in: header
        required: false
        type: string
        description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      - name: fspiop-destination
        in: header
        required: false
        type: string
        description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
      - name: fspiop-encryption
        in: header
        required: false
        type: string
        description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: fspiop-signature
        in: header
        required: false
        type: string
        description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: fspiop-uri
        in: header
        required: false
        type: string
        description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
      - name: fspiop-http-method
        in: header
        required: false
        type: string
        description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
      responses:
        204:
          description: No Content
          headers: {}
        400:
          description: Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        401:
          description: Unauthorized - The request requires authentication in order to be processed.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        403:
          description: Forbidden - The request was denied and will be denied in the future.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        404:
          description: Not Found - The resource specified in the URI was not found.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        405:
          description: Method Not Allowed - An unsupported HTTP method for the request was used.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        406:
          description: Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        501:
          description: Not Implemented - The server does not support the requested service. The client should not retry.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        503:
          description: Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
  /participants:
    post:
      description: The HTTP request POST /participants is used to create information in the server regarding the provided list of identities. This request should be used for bulk creation of FSP information for more than one Party. The optional currency parameter should indicate that each provided Party supports the currency
      summary: Batch create participant information              #fail these as a batch or accept it as a batch
      tags:
      - participants
      operationId: ParticipantsPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: accept
        in: header
        required: true
        type: string
        description: The Accept header field indicates the version of the API the client would like the server to use.
      - name: content-type
        in: header
        required: true
        type: string
        description: The Content-Type header indicates the specific version of the API used to send the payload body.
      - name: date
        in: header
        required: true
        type: string
        description: The Date header field indicates the date when the request was sent.
      - name: fspiop-source
        in: header
        required: true
        type: string
        description: The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ParticipantsPostRequest'
      - name: content-length
        in: header
        required: false
        type: integer
        format: int32
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)
      - name: x-forwarded-for
        in: header
        required: false
        type: string
        description: The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      - name: fspiop-destination
        in: header
        required: false
        type: string
        description: The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.
      - name: fspiop-encryption
        in: header
        required: false
        type: string
        description: The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: fspiop-signature
        in: header
        required: false
        type: string
        description: The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: fspiop-uri
        in: header
        required: false
        type: string
        description: The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.
      - name: fspiop-http-method
        in: header
        required: false
        type: string
        description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.
      responses:
        201:
          description: Created
          headers: {}
          schema:
            $ref: '#/definitions/ParticipantsIDPutResponse'
        400:
          description: Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        401:
          description: Unauthorized - The request requires authentication in order to be processed.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        403:
          description: Forbidden - The request was denied and will be denied in the future.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        404:
          description: Not Found - The resource specified in the URI was not found.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        405:
          description: Method Not Allowed - An unsupported HTTP method for the request was used.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        406:
          description: Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        501:
          description: Not Implemented - The server does not support the requested service. The client should not retry.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
        503:
          description: Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.
          schema:
            $ref: '#/definitions/ErrorInformationResponse'
definitions:
  CurrencyEnum:
    title: CurrencyEnum
    description: The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.
    example: AED
    type: string
    enum:
    - AED
    - AFN
    - ALL
    - AMD
    - ANG
    - AOA
    - ARS
    - AUD
    - AWG
    - AZN
    - BAM
    - BBD
    - BDT
    - BGN
    - BHD
    - BIF
    - BMD
    - BND
    - BOB
    - BRL
    - BSD
    - BTN
    - BWP
    - BYN
    - BZD
    - CAD
    - CDF
    - CHF
    - CLP
    - CNY
    - COP
    - CRC
    - CUC
    - CUP
    - CVE
    - CZK
    - DJF
    - DKK
    - DOP
    - DZD
    - EGP
    - ERN
    - ETB
    - EUR
    - FJD
    - FKP
    - GBP
    - GEL
    - GGP
    - GHS
    - GIP
    - GMD
    - GNF
    - GTQ
    - GYD
    - HKD
    - HNL
    - HRK
    - HTG
    - HUF
    - IDR
    - ILS
    - IMP
    - INR
    - IQD
    - IRR
    - ISK
    - JEP
    - JMD
    - JOD
    - JPY
    - KES
    - KGS
    - KHR
    - KMF
    - KPW
    - KRW
    - KWD
    - KYD
    - KZT
    - LAK
    - LBP
    - LKR
    - LRD
    - LSL
    - LYD
    - MAD
    - MDL
    - MGA
    - MKD
    - MMK
    - MNT
    - MOP
    - MRO
    - MUR
    - MVR
    - MWK
    - MXN
    - MYR
    - MZN
    - NAD
    - NGN
    - NIO
    - NOK
    - NPR
    - NZD
    - OMR
    - PAB
    - PEN
    - PGK
    - PHP
    - PKR
    - PLN
    - PYG
    - QAR
    - RON
    - RSD
    - RUB
    - RWF
    - SAR
    - SBD
    - SCR
    - SDG
    - SEK
    - SGD
    - SHP
    - SLL
    - SOS
    - SPL
    - SRD
    - STD
    - SVC
    - SYP
    - SZL
    - THB
    - TJS
    - TMT
    - TND
    - TOP
    - TRY
    - TTD
    - TVD
    - TWD
    - TZS
    - UAH
    - UGX
    - USD
    - UYU
    - UZS
    - VEF
    - VND
    - VUV
    - WST
    - XAF
    - XCD
    - XDR
    - XOF
    - XPF
    - YER
    - ZAR
    - ZMW
    - ZWD
  PartyIdTypeEnum:
    title: PartyIdTypeEnum
    description: Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier.
    example: MSISDN
    type: string
    enum:
    - MSISDN
    - EMAIL
    - PERSONAL_ID
    - BUSINESS
    - DEVICE
    - ACCOUNT_ID
    - IBAN
    - ALIAS
  ErrorInformation:
    title: ErrorInformation
    description: Data model for the complex type ErrorInformation.
    type: object
    properties:
      errorCode:
        description: Specific error number.
        type: string
      errorDescription:
        description: Error description string.
        type: string
      extensionList:
        $ref: '#/definitions/ExtensionList'
    required:
    - errorCode
    - errorDescription
  ErrorInformationResponse:
    title: ErrorInformationResponse
    description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
    type: object
    properties:
      errorInformation:
        $ref: '#/definitions/ErrorInformation'
  Extension:
    title: Extension
    description: Data model for the complex type Extension
    type: object
    properties:
      key:
        description: Extension key.
        type: string
      value:
        description: Extension value.
        type: string
    required:
    - key
    - value
  ExtensionList:
    title: ExtensionList
    description: Data model for the complex type ExtensionList
    type: object
    properties:
      extension:
        description: Number of Extension elements
        type: array
        items:
          $ref: '#/definitions/Extension'
        minItems: 1
        maxItems: 16
    required:
    - extension
  ParticipantsTypeIDGetResponse:
    title: ParticipantsTypeIDGetResponse
    description: OK
    type: object
    properties:
      partyList:
        description: List of PartyTypeIdInfo elements that were either created or failed to be created.
        type: array
        items:
          $ref: '#/definitions/PartyTypeIdInfo'
        minItems: 1
        maxItems: 10000
  ParticipantsTypeIDPutRequest:
    title: ParticipantsTypeIDPutRequest
    description: PUT /participants/{Type}/{ID} object
    type: object
    properties:
      fspId:
        description: FSP Identifier that the Party belongs to.
        type: string
      currency:
        description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
        type: string
      partySubIdOrType:
        description: A sub-identifier or sub-type for the Party.
        type: string
    required:
    - fspId
    - currency
  ParticipantsPostRequest:
    title: ParticipantsPostRequest
    description: POST /participants object
    type: object
    properties:
      requestId:
        description: The ID of the request, decided by the client. Used for identification of the callback from the server.
        type: string
      partyList:
        description: List of PartyIdInfo elements that the client would like to update or create FSP information about.
        type: array
        items:
          $ref: '#/definitions/PartyIdInfo'
        minItems: 1
        maxItems: 10000
    required:
    - requestId
    - partyList
  PartyIdInfo:
    title: PartyIdInfo
    description: Data model for the complex type PartyIdInfo.
    type: object
    properties:
      partyIdType:
        description: Type of the identifier.
        type: string
      partyIdentifier:
        description: An identifier for the Party.
        type: string
      partySubIdOrType:
        description: A sub-identifier or sub-type for the Party.
        type: string
      fspId:
        description: FSP ID
        type: string
      currency:
        description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
        type: string
    required:
    - partyIdType
    - partyIdentifier
  ParticipantsIDPutResponse:
    title: ParticipantsIDPutResponse
    type: object
    description: PUT /participants/{ID} object
    properties:
      partyList:
        type: array
        items:
          $ref: '#/definitions/PartyResult'
        minItems: 1
        maxItems: 10000
        description: List of PartyResult elements that were either created or failed to be created.
      currency:
        type: string
        description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
    required:
    - partyList
  PartyResult:
    title: PartyResult
    type: object
    description: Data model for the complex type PartyResult.
    properties:
      partyId:
        $ref: '#/definitions/PartyIdInfo'
      errorInformation:
        $ref: '#/definitions/ErrorInformation'
    required:
      - partyId
  PartyTypeIdInfo:
    title: PartyTypeIdInfo
    description: Data model for the complex type PartyIdInfo.
    type: object
    properties:
      fspId:
        description: FSP ID
        type: string
      currency:
        description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
        type: string
      partySubIdOrType:
        description: A sub-identifier or sub-type for the Party.
        type: string
    required:
    - fspId
    - currency
tags:
- name: participants
  description: ''
