@startuml

' declaring skinparam
skinparam shadowing false
skinparam defaultFontName Verdana
skinparam monochrome true
skinparam SequenceLifeLineBackgroundColor WhiteSmoke
skinparam SequenceLifeLineBorderColor Black
skinparam ParticipantFontStyle Bold
skinparam ParticipantFontSize 20
skinparam ParticipantBackgroundColor WhiteSmoke
skinparam ArrowColor Black

hide footbox

!pragma teoz true

title PISP Linking: Credential registration (verification)

participant "PISP" as PISP

box "Mojaloop"
    participant "Thirdparty-API-Adapter" as Switch
    participant "Account Lookup Service" as ALS
    participant "Auth Service" as Auth
end box

participant "DFSP" as DFSP

autonumber 0 "<b>CRED-#</b>"

...

note over PISP, DFSP
    The PISP uses the FIDO registration flow to generate a new keypair and sign the challenge, relying on the user performing an "unlock action" on their mobile device.

    The PISP uses the PublicKeyCredential as the fidoPayload for the credential, which can be understood  by the Auth Service and DFSP
    See https://webauthn.guide/#authentication for more information on this object
end note

...

PISP -> Switch ++: ""PUT /consents/22222222-0000-0000-0000-000000000000""\n\
""  FSIOP-Source: pispa""\n\
""  FSPIOP-Destination: dfspa""\n\
""  {""\n\
    ""  status: "ISSUED",""\n\
    ""  scopes: [""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.1234",""\n\
    ""      actions: [ "ACCOUNTS_TRANSFER" ],""\n\
    ""    },""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.5678",""\n\
    ""      actions: [ "ACCOUNTS_TRANSFER" ],""\n\
    ""    }""\n\
    ""  ],""\n\
    ""  credential: { ""\n\
    ""    credentialType: "FIDO",""\n\
    ""    status: "PENDING",""\n\
    ""    fidoPayload: { ""\n\
    ""      id: "45c-TkfkjQovQeAWmOy-RLBHEJ_e4jYzQYgD8VdbkePgM5d98BaAadadNYrknxgH0jQEON8zBydLgh1EqoC9DA", "" \n\
    ""      response: { ""\n\
    ""        ""  authenticatorData: "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MBAAAACA==",\n\
    ""        ""  clientDataJSON: "eyJ0eXBlIjoid2ViYXV0aG4...",\n\
    ""        ""  signature: "MEUCIDcJRBu5aOLJVc..."\n\
    ""      } ""\n\
    ""    } ""\n\
    ""  }""\n\
""  }""
Switch --> PISP: ""202 Accepted""
deactivate PISP


Switch -> DFSP ++: ""PUT /consents/22222222-0000-0000-0000-000000000000""\n\
""  FSIOP-Source: pispa""\n\
""  FSPIOP-Destination: dfspa""\n\
""  {...}""

DFSP --> Switch: ""202 Accepted""


rnote over DFSP
  1. DFSP checks the signed challenge against the derived challenge from the scopes

  If the DFSP opts to use the hub-hosted Auth-Service it then:
  1. Registers the consent with the Auth Service ""POST /consents""
  2. If the DFSP recieves a  `PUT /consents/{id}` and the callback contains
     ""Consent.credential.status"" of ""VERIFIED"", for each scope in the
     Consent, the DFSP creates a ""CredentialScope"" else, if it recieves
     a `PUT /consents/{id}/error` callback, it knows that the Consent is
     invalid, and can propagate the error back to the PISP

end note


DFSP -> Switch: ""POST /consents"" \n\
""  FSIOP-Source: dfspa""\n\
""  FSPIOP-Destination: central-auth""\n\
""  {""\n\
    ""  consentId: "22222222-0000-0000-0000-000000000000"""\n\
    ""  consentRequestId: "11111111-0000-0000-0000-000000000000"""\n\
    ""  status: "ISSUED",""\n\
    ""  scopes: [""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.1234",""\n\
    ""      actions: [ "ACCOUNTS_TRANSFER" ],""\n\
    ""      }""\n\
    ""    },""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.5678",""\n\
    ""      actions: [ "ACCOUNTS_TRANSFER" ],""\n\
    ""      }""\n\
    ""    },""\n\
    ""  ],""\n\
    ""  credential: { ""\n\
    ""    credentialType: "FIDO",""\n\
    ""    status: "PENDING",""\n\
    ""    fidoPayload: { ""\n\
    ""      id: "45c-TkfkjQovQeAWmOy-RLBHEJ_e4jYzQYgD8VdbkePgM5d98BaAadadNYrknxgH0jQEON8zBydLgh1EqoC9DA", "" \n\
    ""      response: { ""\n\
    ""        ""  authenticatorData: "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MBAAAACA==",\n\
    ""        ""  clientDataJSON: "eyJ0eXBlIjoid2ViYXV0aG4...",\n\
    ""        ""  signature: "MEUCIDcJRBu5aOLJVc..."\n\
    ""      } ""\n\
    ""    } ""\n\
    ""  }""\n\
""  }""

Switch --> DFSP: "202 Accepted"


Switch -> Auth: ""POST /consents"" \n\
""  FSIOP-Source: dfspa""\n\
""  FSPIOP-Destination: central-auth""\n\
""  {...}""

Auth --> Switch: "202 Accepted"


rnote over Auth
  The Auth Service checks the signature against the challenge
end note

rnote over Auth
  The auth service is now the authoritative source for the Consent object.

  It must register the consentId with the ALS
    - `Consent` - to allow for `GET /consent/{ID}` calls etc. Will point to the fspId of the Auth Service responsible for the Consent
end note

Auth -> ALS: ""POST /participants/CONSENTS/22222222-0000-0000-0000-000000000000"" \n\
""  FSIOP-Source: central-auth""\n\
""  {""\n\
""    fspId: "central-auth",""\n\
""  }""
ALS --> Auth: ""202 Accepted""

rnote over ALS #LightGray
  ALS registers a new entry in the Consents oracle
end note

ALS -> Auth: ""PUT /participants/CONSENTS/22222222-0000-0000-0000-000000000000"" \n\
""  FSIOP-Source: account-lookup-service""\n\
""  FSIOP-Destination: central-auth""\n\
""  {""\n\
""    fspId: "central-auth",""\n\
""  }""
Auth --> ALS: ""200 OK""

rnote over Auth #LightGray
  The auth service now informs the DFSP that the credential is valid
end note


Auth -> Switch: ""PUT /consents/22222222-0000-0000-0000-000000000000"" \n\
""  FSIOP-Source: central-auth""\n\
""  FSPIOP-Destination: dfspa""\n\
""  {""\n\
    ""  status: "ISSUED",""\n\
    ""  scopes: [""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.1234",""\n\
    ""      actions: [ "accounts.transfer", "accounts.getBalance" ],""\n\
    ""    },""\n\
    ""    {""\n\
    ""      accountId: "dfsp.username.5678",""\n\
    ""      actions: [ "accounts.transfer", "accounts.getBalance" ],""\n\
    ""    },""\n\
    ""  ],""\n\
    ""  credential: { ""\n\
    ""    credentialType: "FIDO",""\n\
    ""    status: "VERIFIED",""\n\
    ""    fidoPayload: { ""\n\
    ""      id: "45c-TkfkjQovQeAWmOy-RLBHEJ_e4jYzQYgD8VdbkePgM5d98BaAadadNYrknxgH0jQEON8zBydLgh1EqoC9DA", "" \n\
    ""      response: { ""\n\
    ""        ""  authenticatorData: "SZYN5YgOjGh0NBcPZHZgW4/krrmihjLHmVzzuoMdl2MBAAAACA==",\n\
    ""        ""  clientDataJSON: "eyJ0eXBlIjoid2ViYXV0aG4...",\n\
    ""        ""  signature: "MEUCIDcJRBu5aOLJVc..."\n\
    ""      } ""\n\
    ""    } ""\n\
    ""  }""\n\
""  }""
Switch --> Auth: "200 OK"

Switch -> DFSP: ""PUT /consents/22222222-0000-0000-0000-000000000000"" \n\
""  FSIOP-Source: central-auth""\n\
""  FSPIOP-Destination: dfspa""\n\
""  {...}""

DFSP --> Switch: "200 OK"

rnote over DFSP
  DFSP is now satisfied that the Consent registered by the PISP is valid.
end note

@enduml
