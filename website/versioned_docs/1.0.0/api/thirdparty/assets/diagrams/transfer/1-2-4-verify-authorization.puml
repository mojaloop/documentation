@startuml

' declaring skinparam
skinparam sequenceMessageAlign center
skinparam shadowing false
skinparam defaultFontName Verdana
skinparam monochrome true
skinparam SequenceLifeLineBackgroundColor WhiteSmoke
skinparam SequenceLifeLineBorderColor Black
skinparam ParticipantFontStyle Bold
skinparam ParticipantFontSize 20
skinparam ParticipantBackgroundColor WhiteSmoke
skinparam ArrowColor Black

hide footbox

title Transfer: 1.2.4 Verify Authorization


box "Mojaloop"
    participant Switch as S
    participant "Auth-Service" as AUTHS
end box
box "DFSP A"
    participant "DFSP A\n(Payer)" as D2
end box


D2 -> D2: Generate a new ""verificationRequestId"", and associate \n it with the ""thirdpartyTransactionRequestId""

rnote left of D2 #Light
**""POST /thirdpartyRequests/verifications""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: central-auth""
{
  "verificationRequestId": "44444444-0000-0000-0000-000000000000",
  "challenge": ""<base64 encoded binary - the encoded challenge>"",
  "consentId": "123",
  "signedPayloadType": "FIDO",
  "fidoValue": {
    "id": "string",
    "rawId": "string - base64 encoded utf-8",
    "response": {
      "authenticatorData": "string - base64 encoded utf-8",
      "clientDataJSON": "string - base64 encoded utf-8",
      "signature": "string - base64 encoded utf-8",
      "userHandle": "string - base64 encoded utf-8",
    },
    "type": "public-key"
  }
}
end note
D2 -> S: ""POST /thirdpartyRequests/verifications""
S --> D2: ""202 Accepted""
S -> AUTHS: ""POST /thirdpartyRequests/verifications""
AUTHS --> S: ""202 Accepted""

AUTHS -> AUTHS: Lookup this consent based on consentId
AUTHS -> AUTHS: Ensure the accountAddress matches what is in Consent
AUTHS -> AUTHS: Check that the signed bytes match the \npublickey we have stored for the consent

rnote right of AUTHS #Light
**""PUT /thirdpartyRequests/verifications/44444444-0000-0000-0000-000000000000""**
""FSPIOP-Source: central-auth""
""FSPIOP-Destination: dfspa""
{
  "authenticationResponse": "VERIFIED"
}
end note
AUTHS -> S: ""PUT /thirdpartyRequests/verifications""\n""    /44444444-0000-0000-0000-000000000000""
S --> AUTHS: ""200 OK""
S -> D2: ""PUT /thirdpartyRequests/verifications""\n""    /44444444-0000-0000-0000-000000000000""
D2 --> S: ""200 OK""

note over D2
  DFSPA now knows that the user signed this transaction
  and can go ahead and initiate the transfer
end note



@enduml
