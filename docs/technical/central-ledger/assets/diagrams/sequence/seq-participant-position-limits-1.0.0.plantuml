/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Shashikant Hirugade <shashikant.hirugade@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.0.0 Create initial position and limits for Participant

autonumber


' Actor Keys:
' boundary - APIs/Interfaces, etc
' entity - Database Access Objects
' database - Database Persistance Store

' declare actors
actor "HUB OPERATOR" as OPERATOR
boundary "Central Service API" as CSAPI
control "Participant Handler" as PARTICIPANT_HANDLER
entity "Central Service API" as CSAPI
entity "Participant FACADE" as PARTICIPANT_DAO
database "Central Store" as DB

box "Central Services" #LightYellow
participant CSAPI
participant PARTICIPANT_HANDLER
participant PARTICIPANT_DAO
participant DB
end box

' start flow

activate OPERATOR
group Create initial position and limits
    OPERATOR -> CSAPI: Request to Create initial position and limits - POST - /paticipants/{name}/initialPositionAndLimits
    note right of OPERATOR #yellow
        Message:
        {
            currency: <currencyId>,
            limit: {
                type: <limitType>,
                value: <limitValue>
            },
            initialPosition: <positionValue>
        }
    end note

    activate CSAPI
    CSAPI -> PARTICIPANT_HANDLER: Create initial position and limits for Participant
    activate PARTICIPANT_HANDLER
    PARTICIPANT_HANDLER ->PARTICIPANT_DAO: Fetch Participant/ Currency Id \n<color #FF0000><b>Error code:</b> 3200</color>

    activate PARTICIPANT_DAO
    PARTICIPANT_DAO -> DB: Fetch Participant/Currency Id
    activate DB
    hnote over DB #lightyellow
        participant
        participantCurrency
    end note
    DB --> PARTICIPANT_DAO: Retrieved Participant/Currency Id
    deactivate DB
    PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return Participant/Currency Id
    deactivate PARTICIPANT_DAO
    PARTICIPANT_HANDLER ->PARTICIPANT_HANDLER: Validate DFSP
    alt Validate participant (success)
        PARTICIPANT_HANDLER ->PARTICIPANT_DAO: Fetch limit for participantCurrencyId
        activate PARTICIPANT_DAO
        PARTICIPANT_DAO -> DB: Fetch limit for participantCurrencyId
        activate DB
        hnote over DB #lightyellow
            participantLimit
        end note
        DB --> PARTICIPANT_DAO: Retrieved participant limit
        deactivate DB
        PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return participant limit
        deactivate PARTICIPANT_DAO

        PARTICIPANT_HANDLER ->PARTICIPANT_DAO: Fetch position for participantCurrencyId
        activate PARTICIPANT_DAO
        PARTICIPANT_DAO -> DB: Fetch position for participantCurrencyId
        activate DB
        hnote over DB #lightyellow
            participantPosition
        end note
        DB --> PARTICIPANT_DAO: Retrieved participant position
        deactivate DB
        PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return participant position
        deactivate PARTICIPANT_DAO
        
        PARTICIPANT_HANDLER ->PARTICIPANT_HANDLER: Participant position or limit exists check

        alt position or limit does not exist (success)


        PARTICIPANT_HANDLER ->PARTICIPANT_DAO: create initial position and limits for Participantt \n<color #FF0000><b>Error code:</b> 2003/<b>Msg:</b> Service unavailable </color> \n<color #FF0000><b>Error code:</b> 2001/<b>Msg:</b> Internal Server Error </color>
        activate PARTICIPANT_DAO
        PARTICIPANT_DAO -> DB: Persist Participant limits/position
        activate DB
        hnote over DB #lightyellow
            participantPosition
            participantLimit
        end note
        deactivate DB
        PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return status
        deactivate PARTICIPANT_DAO
        alt Details persisted successfully
            PARTICIPANT_HANDLER -->CSAPI: Return Status Code 201
            deactivate PARTICIPANT_HANDLER
            CSAPI -->OPERATOR: Return Status Code 201
        else Details not persisted/Error
            note right of PARTICIPANT_HANDLER #red: Error!
            activate PARTICIPANT_HANDLER
            note right of PARTICIPANT_HANDLER #yellow
            Message:
                {
                    "errorInformation": {
                        "errorCode": <Error Code>,
                        "errorDescription": <Msg>,
                    }
                }
            end note
            PARTICIPANT_HANDLER -->CSAPI: Return <color #FF0000><b>Error code</b></color>
           ' deactivate PARTICIPANT_HANDLER
            CSAPI -->OPERATOR: Return <color #FF0000><b>Error code</b></color>
            
        end
        
        else position or limit exists (failure)
            note right of PARTICIPANT_HANDLER #red: Error!
            activate PARTICIPANT_HANDLER
            note right of PARTICIPANT_HANDLER #yellow
            Message:
                {
                    "errorInformation": {
                        "errorCode": 3200,
                        "errorDescription": "Participant Limit or Initial Position already set",
                    }
                }
            end note
            PARTICIPANT_HANDLER -->CSAPI: Return <color #FF0000><b>Error code:</b> 3200</color>
           ' deactivate PARTICIPANT_HANDLER
            CSAPI -->OPERATOR: Return <color #FF0000><b>Error code:</b> 3200</color>
        
        end

    else Validate participant (failure)
        note right of PARTICIPANT_HANDLER #red: Validation failure!
        activate PARTICIPANT_HANDLER
        note right of PARTICIPANT_HANDLER #yellow
            Message:
                {
                    "errorInformation": {
                        "errorCode": 3200,
                        "errorDescription": "FSP id Not Found",
                    }
                }
        end note
        PARTICIPANT_HANDLER -->CSAPI: Return <color #FF0000><b>Error code:</b> 3200</color>
        deactivate PARTICIPANT_HANDLER
        CSAPI -->OPERATOR: Return <color #FF0000><b>Error code:</b> 3200</color>

    end
    deactivate CSAPI
    deactivate OPERATOR
end
@enduml