/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Shashikant Hirugade <shashikant.hirugade@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.0.0 Get Participant Limit Details For All Participants

autonumber


' Actor Keys:
' boundary - APIs/Interfaces, etc
' collections - Kafka Topics
' control - Kafka Consumers
' entity - Database Access Objects
' database - Database Persistance Store

' declare actors
entity "HUB OPERATOR" as OPERATOR
boundary "Central Service API" as CSAPI
control "Participant Handler" as PARTICIPANT_HANDLER
entity "Central Service API" as CSAPI
entity "Participant Facade" as PARTICIPANT_DAO
database "Central Store" as DB

box "Central Services" #LightYellow
participant CSAPI
participant PARTICIPANT_HANDLER
participant PARTICIPANT_DAO
participant DB
end box

' start flow

activate OPERATOR
group Get Limits for all Participants
    OPERATOR -> CSAPI: Request to get Limits - GET - /participants/limits?type={typeValue}&currency={currencyType}
    activate CSAPI
    CSAPI -> PARTICIPANT_HANDLER: Fetch Limits for all Participants
    activate PARTICIPANT_HANDLER
        PARTICIPANT_HANDLER ->PARTICIPANT_DAO: Fetch Limits for all participants with currency and type \n<color #FF0000><b>Error code:</b> 3000</color>
        activate PARTICIPANT_DAO
        PARTICIPANT_DAO ->DB: Fetch Limits  for currencyId and type(if passed)
        note right of PARTICIPANT_DAO #lightgrey
            Condition:
                participantCurrency.participantCurrencyId = participant.participantCurrencyId
                participantLimit.isActive = 1
                participantLimit.participantCurrencyId = participantCurrency.participantCurrencyId
                [   
                    participantLimit.participantLimitTypeId = participantLimitType.participantLimitTypeId
                    participantLimit.participantCurrencyId = <currencyId>
                    participantLimitType.name = <type>
                ]
        end note

        activate DB
        hnote over DB #lightyellow
                participant
                participantCurrency
                participantLimit
                participantLimitType
        end note
        DB --> PARTICIPANT_DAO: Retrieved Participant Limits for currencyId and type
        deactivate DB
        PARTICIPANT_DAO -->PARTICIPANT_HANDLER: Return Limits for all participants
        deactivate PARTICIPANT_DAO
        note right of PARTICIPANT_HANDLER #yellow
                Message:
                [   
                    {   
                        name: <fsp>
                        currency: <currencyId>,
                        limit: {type: <type>, value: <value>}
                    },
                    {   
                        name: <fsp>
                        currency: <currencyId>,
                        limit: {type: <type>, value: <value>}
                    }
                ]
        end note
        PARTICIPANT_HANDLER -->CSAPI: Return Limits for all participants \n<color #FF0000><b>Error code:</b> 3000</color>
        deactivate PARTICIPANT_HANDLER
        CSAPI -->OPERATOR: Return Limits for all participants \n<color #FF0000><b>Error code:</b> 3000</color>

    deactivate CSAPI
    deactivate OPERATOR
end

@enduml
