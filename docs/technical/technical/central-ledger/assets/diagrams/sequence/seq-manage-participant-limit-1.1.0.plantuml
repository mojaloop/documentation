/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Samuel Kummary <sam@modusbox.com>
 * Shashikant Hirugade <shashikant.hirugade@modusbox.com>
 --------------
 ******'/

@startuml
' declare title
title 1.1.0 Manage Participant Limits

autonumber

' declare actors
actor "HUB OPERATOR" as OPERATOR
boundary "Central Service API" as CSAPI
control "Participant Handler" as PARTICIPANT_HANDLER
entity "Central Service API" as CSAPI
entity "Participant DAO" as PARTICIPANT_DAO
database "Central Store" as DB

box "Central Services" #LightYellow
participant PARTICIPANT_HANDLER
participant PARTICIPANT_DAO
participant DB
end box

' start flow

activate OPERATOR
group Manage Net Debit Cap
    OPERATOR -> CSAPI: Request to adjust Participant Limit for a certain Currency - POST - /participants/{name}/limits
    note right of OPERATOR #yellow
        Message:
        {
            payload: {
                currency: <string>,
                limit: {
                    type: <string>,
                    value: <Id>
                }
            }
        }
    end note

    activate CSAPI
    CSAPI -> PARTICIPANT_HANDLER: Adjust Limit for Participant
    activate PARTICIPANT_HANDLER
    PARTICIPANT_HANDLER ->PARTICIPANT_DAO: Fetch Participant/currency \n<color #FF0000><b>Error code:</b> 3200</color>
    activate PARTICIPANT_DAO
    PARTICIPANT_DAO -> DB: Fetch Participant/currency
    activate DB
    hnote over DB #lightyellow
        participant
        participantCurrency
    end note
    DB --> PARTICIPANT_DAO: Retrieved Participant/currency
    deactivate DB
    PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return Participant/currency
    deactivate PARTICIPANT_DAO
    PARTICIPANT_HANDLER -> PARTICIPANT_HANDLER: Validate DFSP
    alt Validate participant (success)
                PARTICIPANT_HANDLER ->PARTICIPANT_DAO:  (for ParticipantCurrency) Fetch ParticipantLimit \n<color #FF0000><b>Error code:</b> 3200</color>
                activate PARTICIPANT_DAO
                PARTICIPANT_DAO -> DB: Fetch ParticipantLimit
                activate DB
                hnote over DB #lightyellow
                    participantLimit
                end note
                DB --> PARTICIPANT_DAO: Retrieved ParticipantLimit
                deactivate DB
                PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return ParticipantLimit
                deactivate PARTICIPANT_DAO
                PARTICIPANT_HANDLER -> PARTICIPANT_HANDLER: Validate ParticipantLimit
                alt Validate participantLimit (success)
                    Group DB TRANSACTION IMPLEMENTATION - Lock on ParticipantLimit table with UPDATE
                    note right of PARTICIPANT_DAO #lightgrey
                        If (record exists && isActive = 1)
                            oldIsActive.isActive = 0
                            insert Record
                        Else
                            insert Record
                        End

                    end note

                    PARTICIPANT_HANDLER ->PARTICIPANT_DAO:  (for ParticipantLimit) Insert new ParticipantLimit \n<color #FF0000><b>Error code:</b> 3200</color>

                    activate PARTICIPANT_DAO

                    PARTICIPANT_DAO -> DB: Insert ParticipantLimit
                    activate DB
                    hnote over DB #lightyellow
                        participantLimit
                    end note
                    DB --> PARTICIPANT_DAO: Inserted ParticipantLimit
                    deactivate DB
                    PARTICIPANT_DAO --> PARTICIPANT_HANDLER: Return ParticipantLimit


                    deactivate PARTICIPANT_DAO
            ' Release Lock on ParticipantLimit table
                End

         else Validate participantLimit (failure)
                    note right of PARTICIPANT_HANDLER #red: Validation failure!

                    note right of PARTICIPANT_HANDLER #yellow
                        Message:
                            {
                                "errorInformation": {
                                    "errorCode": 3200,
                                    "errorDescription": "ParticipantLimit Not Found",
                                }
                            }
                    end note
                end
            PARTICIPANT_HANDLER --> CSAPI: Return new Limit values and status 200
                note right of PARTICIPANT_HANDLER #yellow
                    Message:
                    {
                        "currency": "EUR",
                        "limit": {
                            "participantLimitId": <number>,
                            "participantLimitTypeId": <number>,
                            "type": <string>,
                            "value": <string>,
                            "isActive": 1
                        }
                    }
                end note
            CSAPI --> OPERATOR: Return new Limit values and status 200

    else Validate participant (failure)
        note right of PARTICIPANT_HANDLER #red: Validation failure!

        note right of PARTICIPANT_HANDLER #yellow
            Message:
                {
                    "errorInformation": {
                        "errorCode": 3200,
                        "errorDescription": "FSP id Not Found",
                    }
                }
        end note

    end
        PARTICIPANT_HANDLER -->CSAPI: Return <color #FF0000><b>Error code:</b> 3200</color>
        deactivate PARTICIPANT_HANDLER
        CSAPI -->OPERATOR: Return <color #FF0000><b>Error code:</b> 3200</color>

    deactivate PARTICIPANT_HANDLER
    deactivate CSAPI
    deactivate OPERATOR
end
@enduml