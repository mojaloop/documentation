/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Georgi Georgiev <georgi.georgiev@modusbox.com>
 * Rajiv Mothilal <rajiv.mothilal@modusbox.com>
 * Miguel de Barros <miguel.debarros@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.3.0. Position Handler Consume (single message)

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
collections "topic-transfer-position" as TOPIC_TRANSFER_POSITION
control "Position Handler" as POS_HANDLER
collections "Event-Topic" as TOPIC_EVENTS
collections "Notification-Topic" as TOPIC_NOTIFICATIONS


box "Central Service" #LightYellow
    participant TOPIC_TRANSFER_POSITION
    participant POS_HANDLER
    participant TOPIC_EVENTS
    participant TOPIC_NOTIFICATIONS
end box

' start flow
activate POS_HANDLER
group Position Handler Consume
    alt Consume Prepare message for Payer
        TOPIC_TRANSFER_POSITION <- POS_HANDLER: Consume Position event message for Payer
        activate TOPIC_TRANSFER_POSITION
        deactivate TOPIC_TRANSFER_POSITION
        break
            group Validate Event
                POS_HANDLER <-> POS_HANDLER: Validate event - Rule: type == 'position' && action == 'prepare'\n<color #FF0000><b>Error codes:</b> 2001</color>
            end
        end
        group Persist Event Information
            |||
            POS_HANDLER -> TOPIC_EVENTS: Publish event information
            ref over POS_HANDLER, TOPIC_EVENTS :  Event Handler Consume\n
            |||
        end
        |||
        ref over POS_HANDLER: Prepare Position Handler Consume\n
        POS_HANDLER -> TOPIC_NOTIFICATIONS: Produce message
    else Consume Fulfil message for Payee
        TOPIC_TRANSFER_POSITION <- POS_HANDLER: Consume Position event message for Payee
        activate TOPIC_TRANSFER_POSITION
        deactivate TOPIC_TRANSFER_POSITION
        break
            group Validate Event
                POS_HANDLER <-> POS_HANDLER: Validate event - Rule: type == 'position' && action == 'commit'\n<color #FF0000><b>Error codes:</b> 2001</color>
            end
        end
        group Persist Event Information
            |||
            POS_HANDLER -> TOPIC_EVENTS: Publish event information
            ref over POS_HANDLER, TOPIC_EVENTS :  Event Handler Consume\n
            |||
        end
        |||
        ref over POS_HANDLER: Fulfil Position Handler Consume\n
        POS_HANDLER -> TOPIC_NOTIFICATIONS: Produce message
    else Consume Abort message
        TOPIC_TRANSFER_POSITION <- POS_HANDLER: Consume Position event message
        activate TOPIC_TRANSFER_POSITION
        deactivate TOPIC_TRANSFER_POSITION
        break
            group Validate Event
                POS_HANDLER <-> POS_HANDLER: Validate event - Rule: type == 'position' &&\naction IN ['timeout-reserved', 'reject', 'fail']\n<color #FF0000><b>Error codes:</b> 2001</color>
            end
        end
        group Persist Event Information
            |||
            POS_HANDLER -> TOPIC_EVENTS: Publish event information
            ref over POS_HANDLER, TOPIC_EVENTS :  Event Handler Consume\n
            |||
        end
        |||
        ref over POS_HANDLER: Abort Position Handler Consume\n
        POS_HANDLER -> TOPIC_NOTIFICATIONS: Produce message
    end

end
deactivate POS_HANDLER
@enduml
