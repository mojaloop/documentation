@startuml dependency-vulnerability-management-process
!theme cerulean

skinparam ActivityBackgroundColor #f0f0f0
skinparam ActivityBorderColor #333333
skinparam ArrowColor #333333
skinparam backgroundColor white
skinparam ActivityFontColor black
skinparam ActivityFontSize 14
skinparam noteFontColor black
skinparam ArrowFontColor black
skinparam PartitionFontColor #000000
skinparam PartitionFontStyle bold
skinparam PartitionBorderColor #333333
skinparam PartitionBackgroundColor #f8f8f8

title Dependency Vulnerability Management Process

start

partition "Vulnerability Detection Tools" {
  :Identify Vulnerability;
  fork
    :GitHub Dependabot Alerts;
  fork again
    :npm run audit:check;
    note right: audit-ci.jsonc with allowlist
  fork again
    :Grype Image Scan;
    note right: .grype.yaml with ignore section
  end fork
}

partition "Triage Process" {
  :Triage Vulnerability;
  :Assess Severity Level;
  fork
    :<back:#FF6666>Critical: 1-3 days</back>;
    note right #FF6666: <b><color:black>Immediate attention</color></b>
  fork again
    :<back:#FFCC66>High: 30 days</back>;
    note right #FFCC66: <b><color:black>High priority</color></b>
  fork again
    :<back:#FFFF66>Medium: 60 days</back>;
    note right #FFFF66: <b><color:black>Medium priority</color></b>
  fork again
    :<back:#99FF99>Low: 90 days</back>;
    note right #99FF99: <b><color:black>Low priority</color></b>
  end fork
  :Take action based on severity level\nand fix date targets;
}

partition "Update Process" {
  :Select Single Module to Update;
  :Update package.json;
  :Run Tests;
  if (Tests Pass?) then (Yes)
    :Create Pull Request;
  else (No)
    if (Cannot Fix?) then (Yes)
      fork
        :<back:#F9E0FF>Update audit-ci.jsonc</back>;
        note right #F9E0FF: <b><color:black>For npm issues</color></b>
      fork again
        :<back:#F9E0FF>Update .grype.yaml</back>;
        note right #F9E0FF: <b><color:black>For container issues</color></b>
      end fork
      :Create Pull Request;
    else (No)
      :<back:#F9E0FF>Adjust Update</back>;
      note right #F9E0FF
        <b><color:black>Consider Alternative Solutions</color></b>
        <b><color:black>Contact Package Maintainer</color></b>
      end note
      :Run Tests Again;
    endif
  endif
  :Code Review Process;
  if (Review Result) then (Approved)
    :Merge PR;
  else (Changes Requested)
    :Update PR;
  endif
}

partition "CI/CD" {
  :CI/CD Pipeline;
  :Security Checks;
  fork
    :audit-ci Check;
  fork again
    :Grype Scan;
  end fork
  if (Checks Pass?) then (Yes)
    :Release/Publish;
  else (No)
    :Fix Security Issues;
  endif
}

if (More Vulnerabilities?) then (Yes)
  :Return to Select Module;
else (No)
  stop
endif

@enduml 