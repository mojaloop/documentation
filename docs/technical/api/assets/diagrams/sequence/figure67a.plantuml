/'*****
License
--------------
Copyright Â© 2017 Bill & Melinda Gates Foundation
The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
Contributors
--------------
This is the official list of the Mojaloop project contributors for this file.
Names of the original copyright holders (individuals or organizations)
should be listed with a '*' in the first column. People who have
contributed from an organization can be listed under the organization
that actually holds the copyright for their contributions (see the
Gates Foundation organization for an example). Those individuals should have
their names indented and be marked with a '-'. Email address can be added
optionally within square brackets <email>.
* Gates Foundation

- Name Surname <name.surname@gatesfoundation.com>
--------------
******'/

@startuml

' define actor image
sprite $actor [25x48/16] {
  0000000000010000000000000
  0000000006CAC910000000000
  0000000095101292000000000
  0000000651000119000000000
  0000000B10000018400000000
  0000001A10000016600000000
  0000000B10000017510000000
  000000083100001A210000000
  0000000191000176110000000
  000000003A866A61100000000
  0000000000466211100000000
  0003333333334443333310000
  0088888888888888888892000
  0821111111111111111118200
  8311111111111111111111A00
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111111111111111111111A20
  A111551111111111138111A20
  A111661111111111139111A20
  A211661111111111139111A20
  A211661111111111139111A20
  A211661111161111139111A20
  A2116611111A2111139111A20
  A2116611111A2111139111A20
  A2116611111A2111139111A20
  A7669611111A211113A666B20
  36669611111A211113A666610
  00016611111A2111139111110
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006611111A2111139100000
  00006966666B7666679100000
  0000266666666666664100000
  0000000111111111111100000
  0000000000000000000000000
}

' declaring skinparam
skinparam sequenceMessageAlign center
skinparam shadowing false
skinparam defaultFontName Verdana
skinparam monochrome true
skinparam SequenceLifeLineBackgroundColor WhiteSmoke
skinparam SequenceLifeLineBorderColor Black
skinparam ActorFontStyle Bold
skinparam ActorFontSize 20
skinparam ParticipantFontStyle Bold
skinparam ParticipantFontSize 20
skinparam ParticipantBackgroundColor WhiteSmoke
skinparam ArrowColor Black

skinparam actor {
  Bordercolor none
  Backgroundcolor none
  shadowing false
}

skinparam participant {
  shadowing true
}

hide footbox

' declare title
' title Bulk Transaction

' Actor Keys:
' participant - FSP(Payer/Payee(s)), Switch and Account Lookup Services (ALS)
' actor - Payer/Payee(s)

' declare actors
actor "<$actor>\nPayer\n" as Payer
participant "\nPayer\nFSP" as PayerFSP
participant "\nOptional\nSwitch" as Switch
participant "\nAccount\nLookup" as ALS
participant "\nPayee\nFSP(s)" as PayeeFSP
actor "<$actor>\nPayees\n(multiple)" as Payee

' start flow
autonumber 1 1 "<b>[0]"
Payer -> PayerFSP: I would like to upload\na file of bulk transactions
activate PayerFSP
Loop #Oldlace
  hnote left of PayerFSP #Oldlace
    For each 
    transaction 
    in bulk file
  end hnote
  PayerFSP -> PayerFSP: Locate Payee, if not\nwithin Payer FSP\nuse Account Lookup
  PayerFSP ->> ALS: **Lookup Participant Information**\n(Payee Party ID Type and Party ID)
  activate ALS
  ALS -> ALS: Lookup FSP for\nrequested Type/ID
  PayerFSP ->> ALS: **Return Participant Information**\n(FSP ID)
  autonumber stop
  deactivate ALS
  PayerFSP -> PayerFSP: Place transaction\nin bulk file\nper Payee FSP
  PayerFSP -[hidden]> Switch
  deactivate PayerFSP
end Loop
Loop #Oldlace
  hnote left of PayerFSP #Oldlace
    For each
    created bulk 
    file per 
    Payee FSP
  end hnote
  PayerFSP -[hidden]> Switch
  activate PayerFSP
  PayerFSP -> PayerFSP: Rate Payer FSP bulk quote\n(depending on fee model)
  autonumber resume
  PayerFSP ->> Switch: **Calculate Bulk Quote**\n(Bulk info and list\nof individual quotes)
  Switch ->> PayeeFSP: **Calculate Bulk Quote**\n(Bulk info and list of individual quotes)
  activate PayeeFSP
  activate Switch
  PayeeFSP -> PayeeFSP: Rate Payee FSP\nfee/commission and\ngenerate condition per\nindividual transfer
  autonumber stop
  Switch <<- PayeeFSP: **Return Bulk Quote Information**\n(List of individual quote results\nand condition per transfer)
  deactivate PayeeFSP
  autonumber resume
  PayerFSP <<- Switch: **Return Bulk Quote Information**\n(List of individual quote results\nand condition per transfer)
  deactivate Switch
  PayerFSP -> PayerFSP: Rate Payer FSP bulk quote\n(depending on fee model)
end Loop
autonumber resume
PayerFSP -> PayerFSP: Calculate total fee for Payer
Payer <- PayerFSP: Bulk has finished processing,\npresent fees
deactivate PayerFSP
Payer -> PayerFSP: Execute my bulk
activate PayerFSP
Loop #Oldlace
  hnote left of PayerFSP #Oldlace
    For each 
    created bulk 
    file per 
    Payee FSP
  end hnote
  PayerFSP -> PayerFSP: Reserve each individual\ntransfer from Payer\naccount to Payee FSP account
autonumber stop
  PayerFSP ->> Switch: **Perform Bulk Transfer**\n(List of individual transfers\nincluding ILP packet and condition)
  activate Switch
autonumber resume
  Switch -> Switch: Reserve each individual\ntransfer from Payer FSP\nto Payee FSP
  autonumber stop
  Switch ->> PayeeFSP: **Perform Bulk Transfer**\n(List of individual transfers\nincluding ILP packet and condition)
  activate PayeeFSP
autonumber resume
  PayeeFSP -> PayeeFSP: Perform each transaction from\nPayer FSP account to Payee\naccount, generate fulfilments
  PayeeFSP -> Payee: Transaction notification\nfor each Payee
  Switch <<- PayeeFSP: **Return Bulk Transfer Information**\n(List of fulfilments)
  autonumber stop
  deactivate PayeeFSP
  Switch -> Switch: Commit each successful\ntransfer from Payer\nFSP to Payee FSP
  autonumber resume
  PayerFSP <<- Switch: **Return Bulk Transfer Information**\n(List of fulfilments)
  deactivate Switch
  PayerFSP -> PayerFSP: Commit each successful\ntransfer from Payer account\nto Payee FSP account
end Loop
Payer <- PayerFSP: Your bulk has been executed
deactivate PayerFSP
@enduml
