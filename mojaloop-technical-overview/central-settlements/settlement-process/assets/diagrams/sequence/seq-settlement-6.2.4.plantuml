/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Georgi Georgiev <georgi.georgiev@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 6.2.4. Get Settlement By Id (getSettlementById)
autonumber

' declare actors
actor "Hub Employee" as OPERATOR
boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO
database "Central Store" as DB

box "Central HUB" #lightpink
    participant OPERATOR
end box

box "Settlement Service" #lightgreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #lightyellow
    participant DB
end box

' start flow
group Get Settlement By Id
activate OPERATOR
    OPERATOR -> SSAPI: GET - /settlements/{id}
    activate SSAPI

    SSAPI-> SETTLE_DAO: Request settlement state\n<color #FF0000><b>Error code:</b> 2001</color>
    activate SETTLE_DAO
    SETTLE_DAO -> DB: Retrieve settlement
    activate DB
    hnote over DB #lightyellow
        SELECT s.settlementId, ssc.settlementStateId, s.reason, s.createdDate
        FROM **settlement** s
        JOIN **settlementStateChange** ssc
        ON ssc.settlementStateChangeId = s.currentStateChangeId
        WHERE s.settlementId = {id}
    end hnote
    deactivate DB
    SSAPI <-- SETTLE_DAO: Return **settlement**
    deactivate SETTLE_DAO

    alt settlement found
        SSAPI-> SETTLE_DAO: Request settlement windows\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        SETTLE_DAO -> DB: Retrieve windows
        activate DB
        hnote over DB #lightyellow
            SELECT sw.settlementWindowId, swsc.settlementWindowStateId,
                   swsc.reason, sw.createdDate, swsc.createdDate changedDate
            FROM **settlementSettlementWindow** ssw
            JOIN **settlementWindow** sw
            ON sw.settlementWindowId = ssw.settlementWindowId
            JOIN **settlementWindowStateChange** swsc
            ON swsc.settlementWindowStateChangeId = sw.currentStateChangeId
            WHERE ssw.settlementId = {id}
        end hnote
        deactivate DB
        SSAPI <-- SETTLE_DAO: Return **windows**
        deactivate SETTLE_DAO

        SSAPI-> SETTLE_DAO: Request settlement accounts\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        SETTLE_DAO -> DB: Retrieve accounts
        activate DB
        hnote over DB #lightyellow
            SELECT pc.participantId, spc.participantCurrencyId, spcsc.settlementStateId, 
                   spcsc.reason, spc.netAmount, pc.currencyId
            FROM **settlementParticipantCurrency** spc
            JOIN **settlementParticipantCurrencyStateChange** spcsc
            ON spcsc.settlementParticipantCurrencyStateChangeId = spc.currentStateChangeId
            JOIN **participantCurrency** pc
            ON pc.participantCurrencyId = spc.participantCurrencyId
            WHERE spc.settlementId = {id}
        end hnote
        deactivate DB
        SSAPI <-- SETTLE_DAO: Return **accounts**
        deactivate SETTLE_DAO

        deactivate SETTLE_DAO
        note left of SSAPI #yellow
            {
                "id": settlement.settlementId,
                "state": settlement.settlementStateId,
                "settlementWindows": [
                    [
                        {
                            "id": window.settlementWindowId,
                            "reason": window.reason,
                            "state": window.settlementWindowStateId,
                            "createdDate": window.createdDate,
                            "changedDate": window.changedDate
                        }
                    ]
                ],
                "participants": [
                    {
                        "id": account.participantId,
                        "accounts": [
                            {
                                "id": account.participantCurrencyId,
                                "reason": account.reason,
                                "state": account.settlementStateId,
                                "netSettlementAmount": {
                                    "amount": account.netAmount,
                                    "currency": account.currencyId
                                }
                            }
                        ]
                    }
                ]
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - 200 (OK)
    else
        note right of SSAPI #lightgray
            Log ERROR event
        end note
        note left of SSAPI #yellow
            {
                errorInformation: {
                    "errorCode": <integer>,
                    "errorDescription": "Client error description"
                }
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - 4xx (Client error)
        deactivate SSAPI
        deactivate OPERATOR
    end
end
@enduml
