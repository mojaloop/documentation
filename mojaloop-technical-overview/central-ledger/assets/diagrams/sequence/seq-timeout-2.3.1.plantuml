/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * ModusBox
 - Georgi Georgiev <georgi.georgiev@modusbox.com>
 --------------
 ******'/

@startuml
' declare title
title 2.3.1. Timeout Prepare Handler 

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
control "Timeout Prepare\nHandler" as TIMEOUT_PREP_HANDLER
collections "topic-\ntransfer-timeout" as TOPIC_TRANSFER_TIMEOUT
collections "topic-event" as EVENT_TOPIC
entity "Timeout DAO" as TIMEOUT_DAO
database "Central Store" as DB

box "Central Service" #lightyellow
    participant TIMEOUT_PREP_HANDLER
    participant TOPIC_TRANSFER_TIMEOUT
    participant EVENT_TOPIC
    participant TIMEOUT_DAO
    participant DB
end box

' start flow

group Timeout Prepare Handler
    activate TIMEOUT_PREP_HANDLER
    group Persist Event Information
        TIMEOUT_PREP_HANDLER -> EVENT_TOPIC: Publish event information
        ref over TIMEOUT_PREP_HANDLER, EVENT_TOPIC :  Event Handler Consume\n
    end

    group Cleanup
        TIMEOUT_PREP_HANDLER -> TIMEOUT_DAO: Cleanup Fulfilled Transfers\n<color #red><b>Error code:</b> 2003</color>
        activate TIMEOUT_DAO
        TIMEOUT_DAO -> DB: Delete fuflfilled transfers records
                activate DB
        deactivate DB
        hnote over DB #lightyellow
            DELETE et
            FROM **expiringTransfer** et
            JOIN **transferFulfilment** tf
            ON tf.transferId = et.transferId
        end note
        TIMEOUT_DAO --> TIMEOUT_PREP_HANDLER: Return success
        deactivate TIMEOUT_DAO
    end

    group List Expired
        TIMEOUT_PREP_HANDLER -> TIMEOUT_DAO: Retrieve Expired Transfers\n<color #red><b>Error code:</b> 2003</color>
        activate TIMEOUT_DAO
        TIMEOUT_DAO -> DB: Select using index
        activate DB
        hnote over DB #lightyellow
            SELECT *
            FROM **expiringTransfer**
            WHERE expirationDate < currentTimestamp
        end note
        TIMEOUT_DAO <-- DB: Return expired transfers
        deactivate DB
        TIMEOUT_DAO --> TIMEOUT_PREP_HANDLER: Return **expiredTransfersList**
        deactivate TIMEOUT_DAO
    end



    loop for each transfer in the list
        |||
        note right of TIMEOUT_PREP_HANDLER #yellow
            <color #red><b>Message:</b></color>
            {
                id: <uuid>
                from: <switch>,
                to: <payerFsp>,
                type: application/json
                content: {
                    headers: null,
                    payload: <transfer>
                },
                metadata: {
                    event: {
                        id: <uuid>,
                        responseTo: null,
                        type: transfer,
                        action: timeout,
                        createdAt: <timestamp>,
                        state: {
                            status: "success",
                            code: 0
                        }
                    }
                }
            }
        end note
        TIMEOUT_PREP_HANDLER -> TOPIC_TRANSFER_TIMEOUT: Publish Timeout event\n<color #red><b>Error code:</b> 2003</color>
        activate TOPIC_TRANSFER_TIMEOUT
        deactivate TOPIC_TRANSFER_TIMEOUT
    end

    deactivate TIMEOUT_PREP_HANDLER
end
@enduml
