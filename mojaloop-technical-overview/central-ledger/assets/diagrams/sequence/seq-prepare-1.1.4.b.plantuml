/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Georgi Georgiev <georgi.georgiev@modusbox.com>
 * Miguel de Barros <miguel.debarros@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.1.4.b. Send notification to Participant (Payer/Payee) (batch messages)

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
actor "DFSP(n)\nParticipant" as DFSP
control "ML API Notification Event Handler" as NOTIFY_HANDLER
boundary "Central Service API" as CSAPI
collections "Notification-Topic" as TOPIC_NOTIFICATIONS
collections "Event-Topic" as TOPIC_EVENTS
entity "Notification DAO" as NOTIFY_DAO
database "Central Store" as DB

box "Financial Service Provider" #lightGray
	participant DFSP
end box

box "ML API Adapter Service" #LightBlue
	participant NOTIFY_HANDLER
end box

box "Central Service" #LightYellow
participant TOPIC_NOTIFICATIONS
    participant CSAPI
    participant TOPIC_EVENTS
    participant EVENT_DAO
    participant NOTIFY_DAO
    participant DB
end box

' start flow
activate NOTIFY_HANDLER
group Send notification to Participant
    TOPIC_NOTIFICATIONS <- NOTIFY_HANDLER: <color #FF0000>**Consume Notifications event batch of messages for Participant**</color>
    activate TOPIC_NOTIFICATIONS
    deactivate TOPIC_NOTIFICATIONS
    loop for each message in batch
        group Persist Event Information
            NOTIFY_HANDLER -> CSAPI: Request to persist event information - POST - /events
            activate CSAPI
            CSAPI -> TOPIC_EVENTS: Publish event information
            activate TOPIC_EVENTS
            |||
            ref over TOPIC_EVENTS :  Event Handler Consume\n
            |||
            TOPIC_EVENTS --> CSAPI: Return success
            deactivate TOPIC_EVENTS
            CSAPI --> NOTIFY_HANDLER: Return success
            deactivate CSAPI
        end
        NOTIFY_HANDLER -> CSAPI: Request Notifications details for Participant - GET - /notifications/DFPS(n)
        activate CSAPI
        CSAPI -> NOTIFY_DAO: Fetch Notifications details for Participant
        activate NOTIFY_DAO
        NOTIFY_DAO -> DB: Fetch Notifications details for Participant
        activate DB
        hnote over DB #lightyellow
            transferPosition
        end note
        DB --> NOTIFY_DAO: Retrieved Notification details for Participant
        'deactivate DB
        NOTIFY_DAO --> CSAPI: Return Notifications details for Participant
        deactivate NOTIFY_DAO
        CSAPI --> NOTIFY_HANDLER: Return Notifications details for Participant
        deactivate CSAPI
        NOTIFY_HANDLER --> DFSP: Callback with Prepare result to Participant to specified URL - PUT - /<dfsp-host>>/transfers
    end
end
deactivate NOTIFY_HANDLER
@enduml
