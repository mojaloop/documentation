/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Georgi Georgiev <georgi.georgiev@modusbox.com>
 * Miguel de Barros <miguel.debarros@modusbox.com>
 * Shashikant Hirugade <shashikant.hirugade@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.1.4.a. Send notification to Participant (Payer/Payee) (single message)

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
actor "DFSP(n)\nParticipant" as DFSP
control "ML API Notification Event Handler" as NOTIFY_HANDLER
boundary "Central Service API" as CSAPI
collections "Notification-Topic" as TOPIC_NOTIFICATIONS
collections "Event-Topic" as TOPIC_EVENTS
entity "Participant DAO" as PARTICIPANT_DAO
database "Central Store" as DB

box "Financial Service Provider" #lightGray
	participant DFSP
end box

box "ML API Adapter Service" #LightBlue
	participant NOTIFY_HANDLER
end box

box "Central Service" #LightYellow
participant TOPIC_NOTIFICATIONS
    participant CSAPI
    participant TOPIC_EVENTS
    participant PARTICIPANT_DAO
    participant DB
end box

' start flow
activate NOTIFY_HANDLER
group Send notification to Participant
    TOPIC_NOTIFICATIONS <- NOTIFY_HANDLER: Consume Notification event
    activate TOPIC_NOTIFICATIONS
    deactivate TOPIC_NOTIFICATIONS

    group Persist Event Information
        NOTIFY_HANDLER -> CSAPI: Request to persist event information - POST - /events
        activate CSAPI
        CSAPI -> TOPIC_EVENTS: Publish event information
        activate TOPIC_EVENTS
        |||
        ref over TOPIC_EVENTS :  Event Handler Consume\n
        |||
        TOPIC_EVENTS --> CSAPI: Return success
        deactivate TOPIC_EVENTS
        CSAPI --> NOTIFY_HANDLER: Return success
        deactivate CSAPI
    end
    note right of NOTIFY_HANDLER #lightgray
        The endpoint details are cached, when the cache
        expires, the details are fetched again
    end note
    NOTIFY_HANDLER -> CSAPI: Request Endpoint details for Participant - GET - /participants/{{fsp}}/endpoints\n<color #FF0000><b>Error code:</b> 2003</color>

    activate CSAPI
    CSAPI -> PARTICIPANT_DAO: Fetch Endpoint details for Participant\n<color #FF0000><b>Error code:</b> 2003</color>
    activate PARTICIPANT_DAO
    PARTICIPANT_DAO -> DB: Fetch Endpoint details for Participant
    activate DB
    hnote over DB #lightyellow
        participantEndpoint
    end note
    DB -> PARTICIPANT_DAO: Retrieved Endpoint details for Participant
    deactivate DB
    PARTICIPANT_DAO --> CSAPI: Return Endpoint details for Participant
    deactivate PARTICIPANT_DAO
    CSAPI --> NOTIFY_HANDLER: Return Endpoint details for Participant\n<color #FF0000><b>Error codes:</b> 3202, 3203</color>
    deactivate CSAPI
    NOTIFY_HANDLER -> DFSP: Callback with Prepare/fulfil result/error to Participant to specified Endpoint - POST/PUT \n<color #FF0000><b>Error code:</b> 1001</color>
    NOTIFY_HANDLER <-- DFSP: HTTP 200 OK 
end
deactivate NOTIFY_HANDLER
@enduml
